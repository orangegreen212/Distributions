# -*- coding: utf-8 -*-
"""Distribution 4 diff.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KoNgiyPmqRtKW8AyWNuegiapfAmai9vh
"""

!pip install streamlit numpy matplotlib seaborn pyngrok -q

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import numpy as np
# import matplotlib.pyplot as plt
# import seaborn as sns
# from pyngrok import ngrok # Make sure to import ngrok if using it in the next step
# 
# # Set the appearance of the plots
# sns.set_style("whitegrid")
# 
# # Generate data
# np.random.seed(142) # for reproducibility
# 
# # --- Function to Generate Data ---
# def generate_distributions(size=1000):
#     distributions = {
#         "Normal": np.random.normal(loc=0, scale=1, size=size),
#         "Exponential": np.random.exponential(scale=1.0, size=size),
#         "Uniform": np.random.uniform(low=-2, high=2, size=size),
#         "Binomial": np.random.binomial(n=10, p=0.5, size=size) # Discrete distribution
#     }
#     return distributions
# 
# # --- Color Mapping ---
# color_map = {
#     "Normal": "skyblue",
#     "Exponential": "lightcoral",
#     "Uniform": "mediumseagreen",
#     "Binomial": "mediumpurple"
# }
# 
# # --- Main Streamlit Interface ---
# st.title("ðŸŽ² Distribution Dashboard")
# st.write("Select a distribution to see its histogram.")
# 
# # Generate the data using the function
# distributions_data = generate_distributions()
# 
# # Get the list of distribution names
# distribution_names = list(distributions_data.keys())
# 
# # Create the radio button selection
# selected_distribution = st.radio(
#     "Select Distribution:",
#     distribution_names
# )
# 
# # --- Plotting ---
# st.subheader(f"Histogram for: {selected_distribution}")
# 
# fig, ax = plt.subplots()
# 
# # Get the specific data array and color
# data_to_plot = distributions_data[selected_distribution]
# plot_color = color_map[selected_distribution]
# 
# # Decide whether to show KDE
# use_kde = selected_distribution != "Binomial"
# 
# # Plot the histogram
# sns.histplot(
#     data_to_plot,
#     kde=use_kde,
#     bins=30,
#     ax=ax,
#     color=plot_color
# )
# 
# ax.set_title(f"Distribution: {selected_distribution}")
# ax.set_xlabel("Value")
# ax.set_ylabel("Frequency" if not use_kde else "Density")
# 
# # Display the plot in Streamlit
# st.pyplot(fig)
# 
# # --- Optional: Display some info about generation ---
# st.sidebar.header("Generation Info")
# st.sidebar.markdown(f"""
# *   **Sample Size:** 1000
# *   **Normal:** Mean=0, StdDev=1
# *   **Exponential:** Scale=1.0
# *   **Uniform:** Low=-2, High=2
# *   **Binomial:** Trials (n)=10, Probability (p)=0.5
# *   *Random Seed:* 42
# """)
# 
# # --- Ngrok Tunnel Setup (Optional but needed for Colab external access) ---
# # If you have an authtoken, uncomment and add it here for stability
# # ngrok.set_auth_token("YOUR_NGROK_AUTH_TOKEN")
# 
# # # You don't run ngrok.connect() here, but in the launch cell below

!ngrok config add-authtoken '2vJym8baVod4QCRn9vpleiOJtEZ_2Tfn2eYGY3TVeo1xg6xco'

from pyngrok import ngrok

# Terminate existing ngrok processes/tunnels for THIS runtime
ngrok.kill()

# Setup ngrok tunnel to Streamlit default port 8501
try:
    public_url = ngrok.connect(8501)
    print(f"Streamlit App URL: {public_url}")

    # Run Streamlit in the background
    !streamlit run app.py --server.port 8501 --server.headless true &

except Exception as e:
    print(f"Error connecting ngrok or running Streamlit: {e}")